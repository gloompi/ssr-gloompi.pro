{"version":3,"sources":["conf.js","ducks/auth.js","ducks/dataStore.js","reducers/index.js","store/index.js","components/Menu/index.js","components/Menu/AddCardForm.js","components/SignIn/index.js","components/List/EditableItem.js","components/Pagination/index.js","helpers.js","components/List/index.js","App.js","serviceWorker.js","index.js"],"names":["appName","api","adminUsername","adminPassword","ReducerRecord","Record","signed","SIGNIN_ADMIN","concat","SIGNOUT_ADMIN","getUrl","createUrl","editUrl","data","List","error","loaded","count","FETCH_DATA_REQUEST","FETCH_DATA_SUCCESS","FETCH_DATA_ERROR","CREATE_DATA_REQUEST","CREATE_DATA_SUCCESS","CREATE_DATA_ERROR","EDIT_DATA_REQUEST","EDIT_DATA_SUCCESS","EDIT_DATA_ERROR","fetchData","_ref6","_ref6$page","page","_ref6$sortBy","sortBy","_ref7","Object","asyncToGenerator","regenerator_default","a","mark","_callee3","dispatch","_ref8","_ref8$data","message","status","wrap","_context3","prev","next","type","axios","get","sent","payload","t0","stop","this","_x3","apply","arguments","combineReducers","auth","state","length","undefined","localStorage","setItem","set","dataStore","action","tasks","total_task_count","update","unshift","pop","store","createStore","reducers","applyMiddleware","thunk","connect","_ref2","signOut","_ref","handleClick","react_default","createElement","className","onClick","name","onChange","e","target","value","inputs","key","AddCardForm","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","preventDefault","isNotValid","createTask","form","FormData","forEach","isEmpty","setState","objectSpread","warning","append","handleClickOutside","current","contains","handleChange","defineProperty","React","createRef","window","addEventListener","removeEventListener","_this2","_this$props","open","ref","style","color","map","_ref3","placeholder","Component","formData","_ref4","_callee2","_ref5","_ref5$data","_context2","post","_x2","SignInForm","_this$state","login","password","signIn","JSON","parse","getItem","_this$props2","Editable","handleEtid","id","editData","text","statusChanged","textChanged","hash","encodedStatus","encodeURI","replace","rfc3986","uri","encodedText","signature","md5","username","email","react","_callee","_ref3$data","_context","_x","Pagination","activePage","paginationList","range","i","Math","ceil","start","end","slice","componentDidMount","EditableItem","assign","components_Pagination","App","addCard","admin","BrowserRouter","es","components_Menu","Menu_AddCardForm","SignIn","Route","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a1086c5c.chunk.js","sourcesContent":["export const appName = 'Beejee-Test'\nexport const api = 'https://uxcandy.com/~shapoval/test-task-backend/'\nexport const developer = 'gloompi'\nexport const adminUsername = 'admin'\nexport const adminPassword = '123'","import { Record } from 'immutable'\n\nimport { appName } from '../conf'\n\nconst ReducerRecord = Record({\n  signed: null,\n})\n\nexport const modulName = 'authentication'\nexport const SIGNIN_ADMIN = `${appName}/${modulName}/SIGNIN_ADMIN`\nexport const SIGNOUT_ADMIN = `${appName}/${modulName}/SIGNOUT_ADMIN`\n\nexport default (state = new ReducerRecord(), action) => {\n  const { type } = action\n  switch (type) {\n    case SIGNIN_ADMIN:\n      localStorage.setItem('auth', true)\n      return state.set('signed', true)\n\n    case SIGNOUT_ADMIN:\n      localStorage.setItem('auth', false)\n      return state.set('signed', false)\n\n    default:\n      return state\n  }\n}\n\nexport const signIn = () => ({ type: SIGNIN_ADMIN })\nexport const signOut = () => ({ type: SIGNOUT_ADMIN })","import { List, Record } from 'immutable'\nimport axios from 'axios'\n\nimport { appName, api, developer } from '../conf'\n\nconst getUrl = `${api}?developer=${developer}&sort_direction=desc`\nconst createUrl = `${api}/create/?developer=${developer}`\nconst editUrl = `${api}/edit/`\n\nconst ReducerRecord = Record({\n  data: new List(),\n  error: null,\n  loaded: null,\n  count: 0,\n})\n\nexport const modulName = 'dataStore'\nexport const FETCH_DATA_REQUEST = `${appName}/${modulName}/FETCH_DATA_REQUEST`\nexport const FETCH_DATA_SUCCESS = `${appName}/${modulName}/FETCH_DATA_SUCCESS`\nexport const FETCH_DATA_ERROR = `${appName}/${modulName}/FETCH_DATA_ERROR`\nexport const CREATE_DATA_REQUEST = `${appName}/${modulName}/CREATE_DATA_REQUEST`\nexport const CREATE_DATA_SUCCESS = `${appName}/${modulName}/CREATE_DATA_SUCCESS`\nexport const CREATE_DATA_ERROR = `${appName}/${modulName}/CREATE_DATA_ERROR`\nexport const EDIT_DATA_REQUEST = `${appName}/${modulName}/EDIT_DATA_REQUEST`\nexport const EDIT_DATA_SUCCESS = `${appName}/${modulName}/EDIT_DATA_SUCCESS`\nexport const EDIT_DATA_ERROR = `${appName}/${modulName}/EDIT_DATA_ERROR`\n\nexport default (state = new ReducerRecord(), action) => {\n  const { type, payload } = action\n\n  switch (type) {\n    case FETCH_DATA_REQUEST:\n      return state.set('loaded', false)\n\n    case FETCH_DATA_SUCCESS:\n      if (payload.status !== 'ok') return state.set('error', payload.message)\n      return state\n        .set('data', payload.message.tasks)\n        .set('count', payload.message.total_task_count)\n        .set('loaded', true)\n        .set('error', false)\n\n    case FETCH_DATA_ERROR:\n      const { error } = payload\n      return state\n        .set('error', error)\n        .set('loaded', true)\n\n    case CREATE_DATA_REQUEST:\n      return state.set('loaded', false)\n\n    case CREATE_DATA_SUCCESS:\n      if (payload.status !== 'ok') return state.set('error', payload.message)\n      return state\n        .update('data', data => {\n          data.unshift(payload.message)\n          data.pop()\n          return data\n        })\n        .set('count', payload.message.total_task_count)\n        .set('loaded', true)\n\n    default:\n      return state\n  }\n}\n\nexport const editData = ({ id, formData }) => async (dispatch) => {\n  dispatch({ type: EDIT_DATA_REQUEST })\n\n  try {\n    const {\n      data: { message, status },\n    } = await axios.post(`${editUrl}${id}/?developer=${developer}`, formData)\n    dispatch({\n      type: EDIT_DATA_SUCCESS,\n      payload: { message, status },\n    })\n  } catch (error) {\n    dispatch({\n      type: EDIT_DATA_ERROR,\n      payload: { error },\n    })\n  }\n}\n\nexport const createTask = formData => async dispatch => {\n  dispatch({ type: CREATE_DATA_REQUEST })\n\n  try {\n    const {\n      data: { message, status },\n    } = await axios.post(createUrl, formData)\n    dispatch({\n      type: CREATE_DATA_SUCCESS,\n      payload: { message, status },\n    })\n  } catch (error) {\n    dispatch({\n      type: CREATE_DATA_ERROR,\n      payload: { error },\n    })\n  }\n}\n\nexport const fetchData = ({ page=1, sortBy='id' }) => async (dispatch) => {\n  dispatch({ type: FETCH_DATA_REQUEST })\n\n  try {\n    const {\n      data: { message, status },\n    } = await axios.get(`${getUrl}&sort_field=${sortBy}&page=${page}`)\n    dispatch({\n      type: FETCH_DATA_SUCCESS,\n      payload: { status, message },\n    })\n  } catch (error) {\n    dispatch({\n      type: FETCH_DATA_ERROR,\n      payload: { error },\n    })\n  }\n}","import { combineReducers } from 'redux'\nimport auth from '../ducks/auth'\nimport dataStore from '../ducks/dataStore'\n\nexport default combineReducers({\n  auth, dataStore\n})","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport reducers from '../reducers'\n\nconst store = createStore(reducers, {}, applyMiddleware(thunk))\n\nexport default store","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport './style.scss'\nimport { fetchData } from '../../ducks/dataStore'\nimport { signOut } from '../../ducks/auth'\n\nconst Menu = ({ handleClick, fetchData, signOut, signed }) => (\n  <nav className='mnu'>\n    <ul className='mnu__list'>\n      <li className='mnu__item'>\n        <button\n          className='mnu__add-btn'\n          onClick={() => handleClick('addCard', true)}\n        />\n      </li>\n      <li className='mnu__item'>\n        <select\n          className='mnu__sort'\n          name='sort'\n          onChange={e => fetchData({ sortBy: e.target.value })}\n        >\n          <option value='id'>None</option>\n          <option value='username'>Username</option>\n          <option value='email'>Email</option>\n          <option value='status'>Status</option>\n        </select>\n      </li>\n      <li className='mnu__item'>\n        <button\n          className='mnu__admin-btn'\n          onClick={() => (\n            signed ? signOut() : handleClick('admin', true)\n          )}\n        >\n          {signed ? 'Sign Out' : 'Sign In'}\n        </button>\n      </li>\n    </ul>\n  </nav>\n)\n\nexport default connect(\n  ({ auth }) => ({ signed: auth.signed }), \n  ({ fetchData, signOut })\n)(Menu)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { isEmpty } from 'lodash'\n\nimport './style.scss'\nimport { createTask } from '../../ducks/dataStore'\n\nconst inputs = [\n  {\n    key: 'username',\n    name: 'UserName'\n  },\n  {\n    key: 'email',\n    name: 'Email'\n  },\n  {\n    key: 'text',\n    name: 'Text'\n  },\n]\n\nclass AddCardForm extends Component {\n  constructor(props) {\n    super(props)\n\n    this.form = React.createRef()\n\n    const state = { warning: false }\n    inputs.forEach(({ key }) => {\n      state[key] = ''\n    })\n    this.state = state\n  }\n\n  componentDidMount() {\n    window.addEventListener('mousedown', this.handleClickOutside)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('mousedown', this.handleClickOutside)\n  }\n\n  render() {\n    const { open, handleClick } = this.props\n    const { warning } = this.state\n    return (\n      <div className={`add-card ${open ? 'active' : ''}`}>\n        <form ref={this.form} className='add-card__form'>\n          {warning && <h3 style={{ color: 'red' }}>All fields must be filled in</h3>}\n          {inputs.map(({ key, name }) => {\n            if (key === 'text') return (\n              <textarea\n                key={key}\n                className={`add-card__input ${key}`}\n                name={key}\n                value={this.state[key]}\n                placeholder={name}\n                onChange={this.handleChange(key)}\n              />\n            )\n            return (\n              <input\n                key={key}\n                className={`add-card__input ${key}`}\n                name={key}\n                type={key === 'email' ? 'email' : 'text'}\n                value={this.state[key]}\n                placeholder={name}\n                onChange={this.handleChange(key)}\n              />\n            )\n          })}\n          <button\n            className='add-card__btn'\n            onClick={this.handleSubmit}\n          >\n            Add Task\n          </button>\n        </form>\n        <button\n          className='add-card__close'\n          onClick={() => handleClick('addCard', false)}\n        >\n          &times;\n        </button>\n      </div>\n    )\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n\n    let isNotValid = false\n    const { createTask } = this.props\n    const form = new FormData()\n    inputs.forEach(({ key }) => {\n      if (isEmpty(this.state[key])) {\n        isNotValid = true\n        this.setState(state => ({ ...state, warning: true }))\n      }\n      form.append(key, this.state[key])\n    })\n\n    if (isNotValid) return null\n    this.setState(state => ({ ...state, warning: false }))\n    createTask(form)\n    this.props.handleClick('addCard', false)\n  }\n\n  handleClickOutside = (e) => {\n    if (!this.form.current.contains(e.target)) {\n      this.props.handleClick('addCard', false)\n    }\n  }\n\n  handleChange = name => e => {\n    const { value } = e.target\n    this.setState(state => ({ ...state, [name]: value }))\n  }\n}\n\nexport default connect(null, ({ createTask }))(AddCardForm)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport './style.scss'\nimport { adminUsername, adminPassword } from '../../conf'\nimport { signIn } from '../../ducks/auth'\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props)\n\n    this.form = React.createRef()\n    this.state = {\n      warning: false,\n      login: '',\n      password: '',\n    }\n  }\n\n  componentDidMount() {\n    if (JSON.parse(localStorage.getItem('auth'))) {\n      this.props.signIn()\n    }\n    window.addEventListener('mousedown', this.handleClickOutside)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('mousedown', this.handleClickOutside)\n  }\n\n  render() {\n    const { open, handleClick } = this.props\n    const { warning } = this.state\n    return (\n      <div className={`add-card ${open ? 'active' : ''}`}>\n        <form ref={this.form} className='add-card__form'>\n          {warning && <h3 style={{ color: 'red' }}>Login or password is not correct</h3>}\n          <input\n            className='add-card__input'\n            name='login'\n            type='text'\n            value={this.state.login}\n            placeholder={'Login'}\n            onChange={this.handleChange('login')}\n          />\n          <input\n            className='add-card__input'\n            name='password'\n            type='password'\n            value={this.state.password}\n            placeholder={'Password'}\n            onChange={this.handleChange('password')}\n          />\n          <button\n            className='add-card__btn'\n            onClick={this.handleSubmit}\n          >\n            Sign In\n          </button>\n        </form>\n        <button\n          className='add-card__close'\n          onClick={() => handleClick('admin', false)}\n        >\n          &times;\n        </button>\n      </div>\n    )\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const { login, password } = this.state\n    const { signIn, handleClick } = this.props\n    if (`${password}` === adminPassword && login === adminUsername) {\n      signIn()\n      handleClick('admin', false)\n    } else {\n      this.setState(state => ({ ...state, warning: true }))\n    }\n  }\n \n  handleClickOutside = (e) => {\n    if (!this.form.current.contains(e.target)) {\n      this.props.handleClick('admin', false)\n    }\n  }\n\n  handleChange = name => e => {\n    const { value } = e.target\n    this.setState(state => ({ ...state, [name]: value }))\n  }\n}\n\nexport default connect(null, ({ signIn }))(SignInForm)","import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport rfc3986 from 'rfc-3986'\nimport md5 from 'md5'\n\nimport './style.scss'\nimport { editData } from '../../ducks/dataStore'\n\nclass Editable extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      text: props.text,\n      status: props.status\n    }\n  }\n  render() {\n    const {\n      id,\n      username,\n      email,\n      signed,\n    } = this.props\n    return (\n      <Fragment>\n        {signed && (\n          <button\n            className='list__item-edit'\n            onClick={() => this.handleEtid(id)}\n          >\n            {this.state[id] ? 'Done' : 'Edit'}\n          </button>\n        )}\n        <p><b>User</b>: {username}</p>\n        <p><b>Email</b>: {email}</p>\n        <p><b>Text</b>: {\n          this.state[id]\n            ? <input\n                value={this.state.text}\n                onChange={this.handleChange('text')}\n              />\n            : this.state.text\n          }\n        </p>\n        {(signed && this.state[id])\n          && (\n            <p>\n              <b>Status</b>:\n              <select value={this.state.status} onChange={this.handleChange('status')}>\n                <option value='0'>0</option>\n                <option value='10'>10</option>\n              </select>\n            </p>\n        )}\n      </Fragment>\n    )\n  }\n\n  handleChange = name => e => {\n    const { value } = e.target\n\n    this.setState(state => ({ ...state, [name]: value }))\n  }\n\n  handleEtid = (id) => {\n    const { editData, status, text } = this.props\n    const statusChanged = status !== this.state.status\n    const textChanged = text !== this.state.text\n    this.setState(state => ({ [id]: !state[id] }))\n    if (this.state[id] && (statusChanged || textChanged)) {\n      let hash = ''\n      const form = new FormData()\n      if (statusChanged) {\n        const encodedStatus = encodeURI(this.state.status).replace(rfc3986.uri)\n        hash = `status=${encodedStatus}`\n        form.append('status', this.state.status)\n      }\n      if (textChanged) {\n        const encodedText = encodeURI(this.state.text).replace(rfc3986.uri)\n        hash = statusChanged\n          ? `${hash}&text=${encodedText}`\n          : `text=${encodedText}`\n        form.append('text', this.state.text)\n      }\n      hash = `${hash}&token=beejee`\n      const signature = md5(hash)\n      form.append('token', 'beejee')\n      form.append('signature', signature)\n      editData({ id, formData: form })\n    }\n  }\n}\n\nexport default connect(null, ({ editData }))(Editable)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport './style.scss'\nimport { fetchData } from '../../ducks/dataStore'\nimport { range } from '../../helpers'\n\nclass Pagination extends Component {\n  state = {\n    activePage: 1\n  }\n\n  render() {\n    const { count } = this.props\n    const { activePage } = this.state\n    const paginationList = range(Math.ceil(count / 3))\n    const start = activePage < 3 ? 0 : activePage - 3\n    const end = activePage > paginationList.length - 3\n      ? paginationList.length\n      : activePage + 3\n    return (\n      <ul className='pagination__list'>\n        {paginationList.slice(start, end).map(page => (\n          <li key={page} className='pagination__item'>\n            <button\n              className={`pagination__button ${activePage === page ? 'active' : ''}`}\n              onClick={() => this.handleClick(page)}\n            >\n              {page}\n            </button>\n          </li>\n        ))}\n      </ul>\n    )\n  }\n\n  handleClick = page => {\n    const { fetchData } = this.props\n    this.setState({ activePage: page })\n    fetchData({ page })\n  }\n}\n\nexport default connect(\n  ({ dataStore }) => ({ count: dataStore.count }), \n  ({ fetchData })\n)(Pagination)\n","import { Map } from 'immutable'\n\nexport const arrToImmObj = (arr, DataRec = Map, id = 'id') => (\n  arr.reduce((acc, elem) => (\n    acc.set(elem[id], new DataRec(elem))\n  ), new Map({}))\n)\n\nexport const ObjToImmArr = obj => (\n  obj.valueSeq().toArray()\n)\n\nexport const arrToObj = arr => (\n  arr.reduce((acc, elem) => {\n    acc[elem.id] = elem\n    return acc\n  }, {})\n)\n\nexport const ObjToArr = obj => (\n  Object.keys(obj).map(id => obj[id])\n)\n\nexport const range = i => (i?range(i-1).concat(i):[])\n","import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\n\nimport './style.scss'\nimport { fetchData } from '../../ducks/dataStore'\nimport EditableItem from './EditableItem'\nimport Pagination from '../Pagination'\n\nclass List extends Component {\n  componentDidMount = () => {\n    const { fetchData, loaded } = this.props\n    if (!loaded) fetchData({})\n  }\n  \n  render() {\n    const { signed, data, loaded, error } = this.props\n\n    if (error) return <h2>Error while retrieving data!</h2>\n    return (\n      <Fragment>\n        {\n          loaded\n            ? <ul className='list'>\n                {data.map((props) => {\n                  const {\n                    id,\n                    status,\n                  } = props\n                  return <li\n                    key={id}\n                    className={`list__item ${`${status}` === '10' ? 'done' : ''}`}\n                  >\n                    <EditableItem\n                      signed={signed}\n                      {...props}\n                    />\n                  </li>\n                })}\n              </ul>\n            : <h2>Loading...</h2>\n        }\n        <Pagination />\n      </Fragment>\n    )\n  }\n}\n\nexport default connect(({ dataStore, auth }) => ({\n  signed: auth.signed,\n  data: dataStore.data,\n  loaded: dataStore.loaded,\n  error: dataStore.error,\n}), ({ fetchData }))(List)\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\nimport store from './store'\nimport './App.scss'\n\nimport Menu from './components/Menu'\nimport AddCardForm from './components/Menu/AddCardForm'\nimport SignInForm from './components/SignIn'\nimport List from './components/List'\n\nclass App extends Component {\n  state = {\n    addCard: false,\n    admin: false,\n  }\n\n  render() {\n    return (\n      <Router>\n        <Provider store={store}>\n          <div className='app'>\n            <header className='app__header'>\n              <h1 className='app__title'>Task Manager</h1>\n              <aside className='app__menu'>\n                <Menu handleClick={this.handleClick} />\n              </aside>\n            </header>\n            <AddCardForm\n              open={this.state.addCard}\n              handleClick={this.handleClick}\n            />\n            <SignInForm\n              open={this.state.admin}\n              handleClick={this.handleClick}\n            />\n            <Route path='/' exact component={List} />\n          </div>\n        </Provider>\n      </Router>\n    )\n  }\n\n  handleClick = (name, value) => {\n    this.setState(state => ({ ...state, [name]: value }))\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}